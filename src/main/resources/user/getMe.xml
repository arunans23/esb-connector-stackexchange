<!--
  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ you may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template xmlns="http://ws.apache.org/ns/synapse" name="getMe">
    <parameter name="filter" description="Response filter"/>
    <sequence>
        <property name="uri.var.filter" expression="$func:filter"/>
        <script language="js">
            <![CDATA[
                function isOptionalEmpty(optional) {
                    if (typeof optional === 'undefined') {
                        return true;
                    }
                    if (optional !== null && optional !== '') {
                        return false;
                    }
                    return true;
                }

                filter = mc.getProperty('uri.var.filter');
                var uriVarOptionals = '';

                if (!isOptionalEmpty(filter)) {
                    uriVarOptionals = String('filter=' + String(filter));
                }
                mc.setProperty('uri.var.optionals', uriVarOptionals);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.apiDomain}/{uri.var.apiVersion}/me?site={uri.var.site}&amp;access_token={uri.var.accessToken}&amp;key={uri.var.key}&amp;{uri.var.optionals}"/>
            </endpoint>
        </call>
        <!-- Forces response decompression -->
        <class name="org.wso2.carbon.connector.DecompressMediator"/>
    </sequence>
</template>
